# Customize this file, documentation can be found here:
# https://docs.fastlane.tools/actions/
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.68.2"

default_platform :ios

TEAM_ID          = '1990621'
TEAM_NAME        = 'Thanh Ho'
ITC_PROVIDER     = 'AFB896Z4SP'

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    bundle_install
    cocoapods
    carthage
    setup_circle_ci
  end

  desc "Runs all the tests"
  lane :test do
    run_tests
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    project = 'Sirius.xcodeproj'

    build_number = latest_testflight_build_number(
      app_identifier: CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier),
      version: get_version_number(xcodeproj: project),
      live: false
    ) + 1
    increment_build_number(
    build_number: build_number,
    xcodeproj: project
  )
    # match(type: "appstore") # more information: https://codesigning.guide
    gym(scheme: "Sirius") # Build your app - more options available
    pilot
    # Variant 1: Provide a changelog to your build
    #testflight(changelog: "Add rocket emoji")

    # Variant 2: Skip the "Waiting for processing" of the binary
    #   While this will speed up your build, it will not distribute
    #   the binary to your tests, nor set a changelog
    testflight(skip_waiting_for_build_processing: true)
    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
    slack(message: "Successfully distributed a new beta build")
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # sync_code_signing(type: "appstore")
    capture_screenshots
    build_app # Build your app - more options available
    upload_to_app_store(force: true)
    # frame_screenshots
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://docs.fastlane.tools/advanced/#control-configuration-by-lane-and-by-platform
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded.
# Learn more at https://docs.fastlane.tools/#metrics
